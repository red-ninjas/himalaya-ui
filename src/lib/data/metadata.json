[{"name":"guide","url":"/guide","children":[{"name":"Getting Started","children":[{"name":"Introduction","url":"/guide/introduction","index":5,"group":"Getting Started","description":"Himalaya is an elegant and beautiful React component library with a distinctive \"Geek\" style, inspired by the Vercel design system and the Geist UI. Himalaya is known for its remarkable features: - Highly Scalable React Components: Himalaya offers a collection of React components that are desig…"},{"name":"Installation","url":"/guide/installation","index":10,"group":"Getting Started","description":"Ensure your have the latest NodeJS, and a package manager: NPM or Yarn. Also, Himalaya is based on the component library of framework React, which means you must also understand the basics of how to create projects with the framework Install yarn add @himalaya-ui/core npm i @himalaya-ui/core Im…"},{"name":"Bundle Size","url":"/guide/bundle-size","index":11,"group":"Getting Started","description":"The size of Himalya UI at the completion of full packing is about 111kb (Gzipped), This is a good score when comparing the size of modern client applications and will not impact the performance of your application. As a matter of engineering practice, it is recommended that you always split Him…"},{"name":"Server Render","url":"/guide/server-render","index":15,"group":"Getting Started","description":"All Components of Himalaya are compatible with Server Render. In fact, the document you see now is rendered by the server. A common React component rendered as an HTML string on the server side usually has two parts: HTML skeleton and styles, together, they form the first string returned to the…"}]},{"name":"Customization","children":[{"name":"Colors","url":"/guide/colors","index":20,"group":"Customization","description":"Default colors for themes. You can use any color anywhere, all colors change with the theme. If you want to customize your colors, please read use-theme to learn more. Get palette from useTheme.}>"},{"name":"Themes","url":"/guide/themes","index":25,"group":"Customization","description":"Himalaya now supports a variety of themes, and it is very easy to create or inherit modifications, no third-party styles or configs. As a basic option, there are three themes available, light and dark. To switch in the default themes you only need to set the value of themeType, you can follow t…"},{"name":"Scale","url":"/guide/scale","index":30,"group":"Customization","description":"The scalable nature of the Himalya gives great flexibility to each component. You can freely scale the component size, rewrite the proportion of the component local space, adjust the inner and outer layout structure, etc. This means that developers: can achieve a high level of customization in …"}]}]},{"name":"components","url":"/components","children":[{"name":"General","children":[{"name":"Text","url":"/components/text","index":10,"group":"General","description":"The Text component allows you to display text with standardized typographic styles. It serves as the foundation for presenting textual content in your application or website."},{"name":"Button","url":"/components/button","index":100,"group":"General","description":"The Button UI component is a versatile element for triggering various operations within your application. It offers a range of features and states to suit your needs:"},{"name":"Carousel","url":"/components/carousel","index":100,"group":"General","description":"The Carousel UI component is a powerful tool for adding interactive sliders to your web pages. It offers a wide range of customization options and features, including:"},{"name":"Code","url":"/components/code","index":100,"group":"General","description":"The Code UI component serves as a versatile tool for displaying source code in a standardized and visually appealing way. Want to display shell code snippets? try Snippet."},{"name":"Hero","url":"/components/hero","index":100,"group":"General","description":"The Hero UI component is a visually striking element designed to draw attention to featured content or key sections of a web page. It typically consists of the following components:"},{"name":"Icons","url":"/components/icons","index":100,"group":"General","description":"The Icon component is a dynamic tool for effortlessly incorporating over 350 semantic vector SVG graphics into your web app, elevating its visual impact and functionality."},{"name":"Running Text","url":"/components/running-text","index":100,"group":"General","description":"The RunningText UI component utilizes a margin animation to smoothly move text from left to right. This eye-catching effect adds dynamic motion to text, making it a compelling way to convey messages or information in web applications or websites."},{"name":"Video","url":"/components/video","index":100,"group":"General","description":"The Video UI component provides a versatile way to display video content on your website or application."}]},{"name":"Layout","children":[{"name":"Box","url":"/components/box","index":100,"group":"Layout","description":"The Box UI component is a versatile and scalable element that can adapt to various use cases within your web application."},{"name":"Page","url":"/components/content-page","index":100,"group":"Layout","description":"Container of general for display page content."},{"name":"Footer","url":"/components/footer","index":100,"group":"Layout","description":"The Footer UI component is a versatile element designed to be placed at the bottom of a web page or section, typically used for navigation, contact information, or additional content."},{"name":"Gradient Content","url":"/components/gradient-content","index":100,"group":"Layout","description":"The GradientContent UI component enables gradient backgrounds and lazy-loaded images to enhance your web application's visual appeal."},{"name":"Grid","url":"/components/grid","index":100,"group":"Layout","description":"Powerful fluid style layout container. The Grid component uses dynamic CSS media query to implement responsive layout, It has ultra-high performance and very small size. Of course, it still supports dynamic props and custom breakpoints."},{"name":"Header","url":"/components/header","index":100,"group":"Layout","description":"The Header UI component provides a customizable header section for your web application, with options for creating a visually appealing and functional top bar."},{"name":"Inner scroll","url":"/components/inner-scroll","index":100,"group":"Layout","description":"The InnerScroll component is a flexible element that empowers your content with scrollable capabilities. Whether you need vertical, horizontal, or both directions, InnerScroll can adapt to your content requirements, making it an invaluable addition to your layout."},{"name":"Page width","url":"/components/page-width","index":100,"group":"Layout","description":"Displays the content with maximum page width given by the ui provider with equal margins from left and right."},{"name":"Section","url":"/components/section","index":100,"group":"Layout","description":"The Section UI component offers a versatile container for organizing and structuring content in your web application."},{"name":"Show More","url":"/components/show-more","index":100,"group":"Layout","description":"Styling component to show expanded or collapsed content."},{"name":"Sidebar","url":"/components/sidebar","index":100,"group":"Layout","description":"Display a sidebar"},{"name":"Spacer","url":"/components/spacer","index":100,"group":"Layout","description":"Provide empty space."}]},{"name":"Surfaces","children":[{"name":"Card","url":"/components/card","index":100,"group":"Surfaces","description":"A common container component."},{"name":"Collapse","url":"/components/collapse","index":100,"group":"Surfaces","description":"Display large amounts of text in collapsible sections. Commonly referred to as an accordion."},{"name":"Entity","url":"/components/entity","index":100,"group":"Surfaces","description":"The Entity UI component is designed to display a collection of related information for a resource entity. It provides a structured and visually appealing way to present data about an entity."},{"name":"Fieldset","url":"/components/fieldset","index":100,"group":"Surfaces","description":"Display a collection of related information in a single unit."}]},{"name":"Data Entry","children":[{"name":"AutoComplete","url":"/components/auto-complete","index":100,"group":"Data Entry","description":"AutoComplete control of input field."},{"name":"Button Group","url":"/components/button-group","index":100,"group":"Data Entry","description":"A set of related buttons."},{"name":"Checkbox","url":"/components/checkbox","index":100,"group":"Data Entry","description":"Displays a boolean value."},{"name":"Input","url":"/components/input","index":100,"group":"Data Entry","description":"Retrieve text input from a user. The Input contain an additional Hooks, see subsection useInput for details."},{"name":"Radio","url":"/components/radio","index":100,"group":"Data Entry","description":"Provides single user input from a selection of options."},{"name":"Select","url":"/components/select","index":100,"group":"Data Entry","description":"Display a dropdown list of items. The Select contain an additional Hooks, see subsection useModal for details."},{"name":"Slider","url":"/components/slider","index":100,"group":"Data Entry","description":"Display the current value and an inputable range."},{"name":"Textarea","url":"/components/textarea","index":100,"group":"Data Entry","description":"Retrieve multi-line user input."},{"name":"Toggle","url":"/components/toggle","index":100,"group":"Data Entry","description":"Displays a boolean value."},{"name":"Toggle List","url":"/components/toggle-list","index":100,"group":"Data Entry","description":"Displays a toggle list event"}]},{"name":"Data Display","children":[{"name":"Avatar","url":"/components/avatar","index":100,"group":"Data Display","description":"Avatars represent a user or a team. Stacked avatars represent a group of people."},{"name":"Badge","url":"/components/badge","index":100,"group":"Data Display","description":"Display an indicator that requires attention."},{"name":"Capacity","url":"/components/capacity","index":100,"group":"Data Display","description":"Display an capacity indicator."},{"name":"Count Up","url":"/components/count-up","index":100,"group":"Data Display","description":"Countup is used to show animation counter"},{"name":"Description","url":"/components/description","index":100,"group":"Data Display","description":"Display brief information with a title and description."},{"name":"Display","url":"/components/display","index":100,"group":"Data Display","description":"To display important information or images in a central alignment."},{"name":"Dot","url":"/components/dot","index":100,"group":"Data Display","description":"Display an indicator of standardization status."},{"name":"File Tree","url":"/components/file-tree","index":100,"group":"Data Display","description":"Display a list of files and folders in a hierarchical tree structure."},{"name":"Image","url":"/components/image","index":100,"group":"Data Display","description":"Display image content."},{"name":"Keyboard","url":"/components/keyboard","index":100,"group":"Data Display","description":"Display keyboard input that triggers an action. The Keyboard can only display layout styles, if you need to bind the keyboard events, please read subsection useKeyboard."},{"name":"Menu","url":"/components/menu","index":100,"group":"Data Display","description":"Easily create and customize menus for your applications with the Menu UI component."},{"name":"Popover","url":"/components/popover","index":100,"group":"Data Display","description":"The floating box popped by clicking or hovering."},{"name":"Skeleton","url":"/components/skeleton","index":100,"group":"Data Display","description":"Show a placeholder in place of content that is loading."},{"name":"Table","url":"/components/table","index":100,"group":"Data Display","description":"Display tabular data in format."},{"name":"Tag","url":"/components/tag","index":100,"group":"Data Display","description":"Display a unique keyword, optionally as a part of a set."},{"name":"Tooltip","url":"/components/tooltip","index":100,"group":"Data Display","description":"Displays additional information on hover."},{"name":"User","url":"/components/user","index":100,"group":"Data Display","description":"Display user profile or social information."}]},{"name":"Feedback","children":[{"name":"Drawer","url":"/components/drawer","index":100,"group":"Feedback","description":"An interactive element fixed to the edge of the screen."},{"name":"Gauge","url":"/components/gauge","index":100,"group":"Feedback","description":"Display Gauge UI component to show progress."},{"name":"Loading spinner","url":"/components/loading-spinner","index":100,"group":"Feedback","description":"Indicate an action running in the background."},{"name":"Modal","url":"/components/modal","index":100,"group":"Feedback","description":"Display popup content that requires attention or provides additional information. If you just need to prompt for a text message, try component Toast. The Modal contain an additional Hooks, see subsection useModal for details."},{"name":"Note","url":"/components/note","index":100,"group":"Feedback","description":"Display text that requires attention or provides additional information."},{"name":"Progress","url":"/components/progress","index":100,"group":"Feedback","description":"Display progress relative to a limit or related to a task."},{"name":"Rating","url":"/components/rating","index":100,"group":"Feedback","description":"Display an indicator of rankings with stars."},{"name":"Spinner","url":"/components/spinner","index":100,"group":"Feedback","description":"Indicate an action running in the background. As an indicator of load waiting, see also component Loading."},{"name":"Toast","url":"/components/toast","index":100,"group":"Feedback","description":"The Toast component only supports Hooks calls, please see the useToast documentation for details."}]},{"name":"Navigation","children":[{"name":"Bottom Navigation","url":"/components/bottom-navigation","index":100,"group":"Navigation","description":"Fixed BottomNavigation UI component designed for mobile devices, providing seamless and accessible navigation."},{"name":"Breadcrumbs","url":"/components/breadcrumbs","index":100,"group":"Navigation","description":"Show where users are in the application."},{"name":"Link","url":"/components/link","index":100,"group":"Navigation","description":"Hyperlinks between pages."},{"name":"Mobile Menu","url":"/components/mobile-menu","index":100,"group":"Navigation","description":"Create mobile-friendly navigation menus with ease using the MobileMenu UI component."},{"name":"Navigation","url":"/components/navigation","index":100,"group":"Navigation","description":"Navigation Effortlessly create navigation menus, including sub-menus and child items, using the Navigation UI component."},{"name":"Pagination","url":"/components/pagination","index":100,"group":"Navigation","description":"Navigation and identification between multiple pages."},{"name":"Quick Bar","url":"/components/quick-bar","index":100,"group":"Navigation","description":"QuickBar is a customizable sidebar component designed for navigation ."},{"name":"Routing Indicator","url":"/components/routing-indicator","index":100,"group":"Navigation","description":"The RoutingIndicator UI component provides visual feedback during page transitions, enhancing the user experience by showing the progress of navigation."},{"name":"Tabs","url":"/components/tabs","index":100,"group":"Navigation","description":"Display tab content. The Tabs contain an additional Hooks, see subsection useTabs for details."},{"name":"Button Dropdown","url":"/components/button-dropdown","index":101,"group":"Navigation","description":"Display related but alternate actions for a button."}]},{"name":"Others","children":[{"name":"Animated Cursor","url":"/components/animated-cursor","index":100,"group":"Others","description":"An AnimatedCursor UI component to customizable cursor animations for interactivity."},{"name":"Divider","url":"/components/divider","index":100,"group":"Others","description":"A divider line separates different content."},{"name":"Search","url":"/components/search","index":100,"group":"Others","description":"The Search UI component provides a flexible and customizable search modal for web applications."},{"name":"Snippet","url":"/components/snippet","index":100,"group":"Others","description":"Display a snippet of copyable code for the command line."}]},{"name":"Effects","children":[{"name":"Fade-In Effect","url":"/components/fade-in","index":1,"group":"Effects","description":"A Fade-in UI Component for stunning fade-in animations and captivating visual effects."},{"name":"Gradient Word","url":"/components/gradient-word","index":2,"group":"Effects","description":"The GradientWord UI component adds captivating gradient effects to text, enhancing your web application with dynamic and colorful typography."}]},{"name":"Charts","children":[{"name":"Charts","url":"/components/charts","index":100,"group":"Charts","description":"Charts creates interactive financial charts."}]}]},{"name":"hooks","url":"/hooks","children":[{"name":"Enhancement","children":[{"name":"useKeyboard","url":"/hooks/use-keyboard","index":5,"group":"Enhancement","description":"React hooks for listen to multiple keyboard events."},{"name":"useInput","url":"/hooks/use-input","index":10,"group":"Enhancement","description":"useInput provides automatic binding for component Input, which can reduce the amount of repetitive code and improve the development experience. Using this hooks behaves the same as if you had added React.useState manually."},{"name":"useModal","url":"/hooks/use-modal","index":11,"group":"Enhancement","description":"useModal provides automatic binding for component Modal, which can reduce the amount of repetitive code and improve the development experience. Using this hooks behaves the same as if you had added React.useState manually. This hooks also supports use on Select component."},{"name":"useTabs","url":"/hooks/use-tabs","index":11,"group":"Enhancement","description":"useTabs provides automatic binding for component Tabs, which can reduce the amount of repetitive code and improve the development experience. Using this hooks behaves the same as if you had added React.useState manually."},{"name":"useToast","url":"/hooks/use-toast","index":12,"group":"Enhancement","description":"Display an important message globally."}]},{"name":"Utilities","children":[{"name":"useBodyScroll","url":"/hooks/use-body-scroll","index":100,"group":"Utilities","description":"Disable scrolling behavior for body or any element, it is useful for displaying popup element or menus. If the page's scrollbar is set to a user-defined width before scrolling is disabled, a paddingRight value will be added after disabling to adapt."},{"name":"useClickAway","url":"/hooks/use-click-away","index":100,"group":"Utilities","description":"Detect if a click event happened outside an element. This is custom React hooks, you need to follow the Basic Rules when you use it."},{"name":"useClipboard","url":"/hooks/use-clipboard","index":100,"group":"Utilities","description":"Copy string to clipboard. This is custom React hooks, you need to follow the Basic Rules when you use it."},{"name":"useMediaQuery","url":"/hooks/use-media-query","index":100,"group":"Utilities","description":"CSS media query hooks, it is implemented through the MediaQuery API. If you just want to build the layout, try Grid Component. This is custom React hooks, you need to follow the Basic Rules when you use it."},{"name":"useSearch","url":"/hooks/use-search","index":100,"group":"Utilities","description":"The useSearch utility provides a flexible way to manage and control search functionality."},{"name":"useSidebar","url":"/hooks/use-sidebar","index":100,"group":"Utilities","description":"Simplify Sidebar Control. The useSidebar hook grants access to the sidebar state, allowing you to effortlessly manage and control the visibility and behavior of a sidebar component."}]},{"name":"Development","children":[{"name":"useTheme","url":"/hooks/use-theme","index":100,"group":"Development","description":"This hooks can get the theme states of Himalya within any component, and can track changes in states. In the default scenario (you haven't changed the themeType), hooks gets the same value as Themes.getPresets. Usually the components from Himalya are already added with theme states, you don't n…"},{"name":"useCurrentState","url":"/hooks/use-current-state","index":101,"group":"Development","description":"Get the latest value in functional component. By default, state in a React function component can only get the value at render time, not the latest. This is a small tool to get the latest value, It is very useful in async actions such as setTimeout. if you like a bigger solution, try useReducer…"},{"name":"useScale","url":"/hooks/use-scale","index":103,"group":"Development","description":"Remember the elastic scaling feature mentioned in the scale subsection, which gave the Himalya components amazing imagination and extensibility, and now you can add elastic scaling features to your own components with the help of the useScale hooks. As a first example, let's prepare a simple co…"},{"name":"useClasses","url":"/hooks/use-classes","index":104,"group":"Development","description":"Technically, this is not a hooks, it just uses the nomenclature of hooks as well. useClasses is used to mix strings, objects, expressions, etc. into class-names, and remove the extra space characters. It is actually similar in function to classnames, but much more compact and lower of size. The…"}]}]}]
